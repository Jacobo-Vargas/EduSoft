name: Deploy Frontend to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'  # Solo se ejecuta si hay cambios en frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Login a ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build & Push Docker image
      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_REPO_NAME=edusoft-front
          IMAGE_TAG=latest
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
          
          echo "Building Docker image..."
          docker build -t $IMAGE_REPO_NAME ./frontend

          echo "Tagging image..."
          docker tag $IMAGE_REPO_NAME:latest $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG
          
          echo "Pushing image..."
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG
       
       # 5. Deploy en EC2 v√≠a SSH
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Definir variables de entorno en la EC2
            ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
            ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
            IMAGE_NAME=edusoft-front:latest

            echo "Login to ECR on EC2..."
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "Pulling latest image..."
            docker pull $ECR_REGISTRY/$IMAGE_NAME

            echo "Stopping old container..."
            docker stop edusoft-frontend || true
            docker rm edusoft-frontend || true

            echo "Running new container..."
            docker run -d --name edusoft-frontend -p 8080:80 $ECR_REGISTRY/$IMAGE_NAME
          
